pipeline {
    agent any

    environment {
        DOCKER_SERVER = "ubuntu@172.31.7.208"
		    SONARQUBE = credentials('sonarqube1')
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'master', url: 'https://github.com/Vandu0409/jenkins.git'
            }
        }

        stage('Build') {
            steps {
                sh '''
                    cd javaapp-standalone
                    mvn clean package -DskipTests
                '''
            }
        }

        stage('Test') {
            steps {
                sh '''
                    cd javaapp-standalone
                    mvn test
                '''
            }
        }
		stage('SonarQube Analysis') {
			steps {
				withSonarQubeEnv('sonarqube1') {
					sh "mvn sonar:sonar -Dsonar.projectKey=myapp"
				}
			}
		}

		 stage('Trivy FS Scan') {
            steps {
                sh 'trivy fs --exit-code 0 --severity HIGH,CRITICAL .'
            }
        }
		
		stage('Build Docker Image') {
            steps {
                sh "docker build -t myapp:latest ."
            }
        }
		stage('Trivy Scan') {
            steps {
                sh "trivy image --exit-code 0 --severity CRITICAL,HIGH myapp:latest"
            }
        }
		stage('Push to ECR') {
			steps {
				sh '''
				aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin 905418283021.dkr.ecr.ap-south-1.amazonaws.com
				docker tag myapp:latest 905418283021.dkr.ecr.ap-south-1.amazonaws.com/javaapp-image:latest
				docker push 905418283021.dkr.ecr.ap-south-1.amazonaws.com/javaapp-image:latest
				'''
			}
		}
        stage('Deploy') {
			steps {
				sshagent(['ubuntu']) {
					sh """
						ssh -o StrictHostKeyChecking=no $DOCKER_SERVER '
							docker stop myapp || true &&
							docker rm -f myapp || true &&
							docker pull 905418283021.dkr.ecr.ap-south-1.amazonaws.com/javaapp-image:latest &&
							docker run -d --name myapp -p 5000:5000 905418283021.dkr.ecr.ap-south-1.amazonaws.com/javaapp-image:latest
						'
						PUBLIC_IP=\$(ssh -o StrictHostKeyChecking=no $DOCKER_SERVER "curl -s http://checkip.amazonaws.com")
						echo "==================================================="
						echo " Application deployed successfully! ðŸŽ‰"
						echo " Access it here: http://\$PUBLIC_IP:5000"
						echo "==================================================="
					"""
				}
			}
		}


    }
}
